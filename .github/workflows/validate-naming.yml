name: Validate TIBCO BW6 Naming Conventions

on:
  push:
    branches:
      - main

jobs:
  validate-naming:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate Application/Module/Parent Project Names
        run: |
          echo "üîç Validating TIBCO BW6 project names..."

          is_kebab_case() {
            [[ "$1" =~ ^[a-z0-9]+(-[a-z0-9]+)*$ ]]
          }

          violations=0

          # Use a for-loop instead of while-read (subshell issue)
          project_files=$(find . -type f \( -name ".project" -o -name "*.project" \))
          for project_file in $project_files; do
            folder_path=$(dirname "$project_file")
            folder_name=$(basename "$folder_path")

            proj_name=$(grep -oPm1 '(?<=<name>)[^<]+' "$project_file" || echo "")

            echo "üìÇ Folder: $folder_name"
            echo "üìÑ Project name in XML: $proj_name"

            if [[ -z "$proj_name" ]]; then
              echo "‚ö†Ô∏è No <name> found in $project_file"
              violations=$((violations + 1))
              continue
            fi

            # Strip known suffixes to validate just the core part
            if [[ "$proj_name" == *.module ]]; then
              core_name="${proj_name%.module}"
            elif [[ "$proj_name" == *.parent ]]; then
              core_name="${proj_name%.parent}"
            else
              core_name="$proj_name"
            fi

            if ! is_kebab_case "$core_name"; then
              echo "‚ùå Invalid name: '$proj_name' ‚Üí core '$core_name' is not kebab-case"
              violations=$((violations + 1))
            else
              echo "‚úÖ Valid: $proj_name"
            fi
          done

          if [[ $violations -gt 0 ]]; then
            echo "‚ùå Found $violations naming violation(s). Please follow kebab-case like 'order-service'."
            exit 1
          else
            echo "‚úÖ All project names follow kebab-case."
          fi
